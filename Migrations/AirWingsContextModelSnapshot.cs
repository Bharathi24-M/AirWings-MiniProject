// <auto-generated />
using System;
using AirWings.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirWings.Migrations
{
    [DbContext(typeof(AirWingsContext))]
    partial class AirWingsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AirWings.Models.Citydetail", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cityId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("Cityname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cityname");

                    b.HasKey("CityId")
                        .HasName("PK__citydeta__B4BEB95E0D03CF77");

                    b.ToTable("citydetails", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Flightdetail", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("flightId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"), 1L, 1);

                    b.Property<bool?>("Business")
                        .HasColumnType("bit")
                        .HasColumnName("business");

                    b.Property<bool?>("Economic")
                        .HasColumnType("bit")
                        .HasColumnName("economic");

                    b.Property<string>("FlightName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("flightName");

                    b.HasKey("FlightId")
                        .HasName("PK__flightde__0E018642F21CDB2B");

                    b.ToTable("flightdetails", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Offer", b =>
                {
                    b.Property<int>("Offerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("offerid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Offerid"), 1L, 1);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Offername")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("offername");

                    b.Property<int>("Offerprice")
                        .HasColumnType("int")
                        .HasColumnName("offerprice");

                    b.HasKey("Offerid");

                    b.ToTable("offer", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Paymentmode", b =>
                {
                    b.Property<int>("Paymodeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymodeid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Paymodeid"), 1L, 1);

                    b.Property<string>("Paymode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("paymode");

                    b.HasKey("Paymodeid")
                        .HasName("PK__paymentm__3C99DD269778A881");

                    b.ToTable("paymentmode", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Register", b =>
                {
                    b.Property<int>("Regid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("regid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Regid"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("emailId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Psword")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("psword");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("username");

                    b.HasKey("Regid")
                        .HasName("PK__register__184A6B04B097D692");

                    b.ToTable("register", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Ticketdetail", b =>
                {
                    b.Property<string>("Pnr")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pnr");

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("discount");

                    b.Property<int?>("Fare")
                        .HasColumnType("int")
                        .HasColumnName("fare");

                    b.Property<int?>("Netamount")
                        .HasColumnType("int")
                        .HasColumnName("netamount");

                    b.Property<int?>("Offerid")
                        .HasColumnType("int")
                        .HasColumnName("offerid");

                    b.Property<int?>("Paymodeid")
                        .HasColumnType("int")
                        .HasColumnName("paymodeid");

                    b.Property<int?>("Taxamount")
                        .HasColumnType("int")
                        .HasColumnName("taxamount");

                    b.Property<string>("Ticketstatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ticketstatus");

                    b.Property<int?>("Tripid")
                        .HasColumnType("int")
                        .HasColumnName("tripid");

                    b.HasKey("Pnr")
                        .HasName("PK__ticketde__DD37C14C4BDCC355");

                    b.HasIndex("Offerid");

                    b.HasIndex("Paymodeid");

                    b.HasIndex("Tripid");

                    b.ToTable("ticketdetails", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Tripdetail", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tripId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime")
                        .HasColumnName("arrivaltime");

                    b.Property<int>("Availableseats")
                        .HasColumnType("int")
                        .HasColumnName("availableseats");

                    b.Property<int>("Businessavailableseats")
                        .HasColumnType("int")
                        .HasColumnName("businessavailableseats");

                    b.Property<double>("Businessfare")
                        .HasColumnType("float")
                        .HasColumnName("businessfare");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime")
                        .HasColumnName("departuretime");

                    b.Property<int>("Destination")
                        .HasColumnType("int")
                        .HasColumnName("destination");

                    b.Property<double>("Fare")
                        .HasColumnType("float")
                        .HasColumnName("fare");

                    b.Property<int>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("flightId");

                    b.Property<int>("Origin")
                        .HasColumnType("int")
                        .HasColumnName("origin");

                    b.HasKey("TripId")
                        .HasName("PK__tripdeta__303EBF8550DDB82E");

                    b.HasIndex("FlightId");

                    b.ToTable("tripdetails", (string)null);
                });

            modelBuilder.Entity("AirWings.Models.Ticketdetail", b =>
                {
                    b.HasOne("AirWings.Models.Offer", "Offer")
                        .WithMany("Ticketdetails")
                        .HasForeignKey("Offerid")
                        .HasConstraintName("FK__ticketdet__offer__46E78A0C");

                    b.HasOne("AirWings.Models.Paymentmode", "Paymode")
                        .WithMany("Ticketdetails")
                        .HasForeignKey("Paymodeid")
                        .HasConstraintName("FK__ticketdet__paymo__47DBAE45");

                    b.HasOne("AirWings.Models.Tripdetail", "Trip")
                        .WithMany("Ticketdetails")
                        .HasForeignKey("Tripid")
                        .HasConstraintName("FK__ticketdet__tripi__45F365D3");

                    b.Navigation("Offer");

                    b.Navigation("Paymode");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("AirWings.Models.Tripdetail", b =>
                {
                    b.HasOne("AirWings.Models.Flightdetail", "Flight")
                        .WithMany("Tripdetails")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__tripdetai__fligh__3A81B327");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirWings.Models.Flightdetail", b =>
                {
                    b.Navigation("Tripdetails");
                });

            modelBuilder.Entity("AirWings.Models.Offer", b =>
                {
                    b.Navigation("Ticketdetails");
                });

            modelBuilder.Entity("AirWings.Models.Paymentmode", b =>
                {
                    b.Navigation("Ticketdetails");
                });

            modelBuilder.Entity("AirWings.Models.Tripdetail", b =>
                {
                    b.Navigation("Ticketdetails");
                });
#pragma warning restore 612, 618
        }
    }
}
